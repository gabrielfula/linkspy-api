generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  uuid       String    @default(uuid())
  name       String
  email      String    @unique
  password   String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  links      Link[]

  @@map("users")
}

model Link {
  id            Int       @id @default(autoincrement())
  uuid          String    @default(uuid())
  user_id       Int
  original_link String
  new_link      String
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  deleted_at    DateTime?
  track_code    String    @unique
  user          User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  locations     Location[]

  @@index([user_id], map: "links_user_id_fkey")
  @@map("links")
}

model Location {
  id                  Int       @id @default(autoincrement())
  uuid                String    @default(uuid())
  longitude           String
  latitude            String
  ip_address          String
  state               String
  city                String
  cep                 String?
  neighborhood        String?
  street              String?
  link_id             Int
  created_at          DateTime  @default(now())
  updated_at          DateTime  @updatedAt
  deleted_at          DateTime?
  link       Link     @relation(fields: [link_id], references: [id], onDelete: Cascade)

  @@map("locations")
}

model IntegrationLog {
  id         Int        @id @default(autoincrement())
  uuid       String     @default(uuid())
  provider   String
  method     HttpMethod
  url        String
  response   String
  data       String
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  deleted_at DateTime?

  @@map("integration_logs")
}

enum HttpMethod {
  GET
  POST
  PUT
  DELETE
  PATCH
}